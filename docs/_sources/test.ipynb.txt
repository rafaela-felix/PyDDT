{
 "cells": [
  {
   "attachments": {},
   "cell_type": "markdown",
   "id": "f5700640",
   "metadata": {},
   "source": [
    "# Crystallographic calculations"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f7c9667a",
   "metadata": {},
   "source": [
    "Step by step tutorial on using **pyddt** for calculating atomic scattering amplitudes and structure factors."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "03a344e2",
   "metadata": {},
   "source": [
    "## 0.1 Importing packages"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "25430003",
   "metadata": {},
   "source": [
    "Beyond **pyddt**, we will also use Numpy for manipulating arrays and matplotlib for plotting."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "1ea2f141",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "8651c5a3bffe475584e9f42dd1fa48b6",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": []
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "plt.rcParams['font.size'] = '16'\n",
    "\n",
    "import sys\n",
    "sys.path.append('/home/rafaela/doutorado/pyddt')\n",
    "\n",
    "import pyddt"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f208da36",
   "metadata": {},
   "source": [
    "See [Computer Simulation Tools for X-ray Analysis: Scattering and Diffraction Methods](https://link.springer.com/book/10.1007/978-3-319-19554-4) for detailed reference on X-ray scattering theory. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "db474d7a",
   "metadata": {},
   "source": [
    "## 0.2 Atomic scattering factor"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d4e7a61e",
   "metadata": {},
   "source": [
    "The atomic scattering factors of neutral atoms and significant ions are listed on the [International Tables of Crystallography](https://onlinelibrary.wiley.com/doi/book/10.1107/97809553602060000001L). \n",
    "\n",
    "**pyddt** implementation uses the following parametric equation for interpolating the tabulated values:\n",
    "\n",
    "$$f_{0}(\\text{sin}\\theta/\\lambda) = f_{0}(Q/4\\pi) = \\sum_{i=1}^{4}a_{i}e^{-b_{i}\\big(\\frac{Q}{4\\pi}\\big)^{2}} + c $$\n",
    "\n",
    "$a_{i}, b_{i}$ and $c$ are called Cromer-Mann coefficients. Worth noting that this approximation is highly inaccurate for Q > 30 $\\mathring A$$^{-1}$."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8f492444",
   "metadata": {},
   "source": [
    "##  0.3 Atomic resonance amplitude"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1c6a1d76",
   "metadata": {},
   "source": [
    "The atomic resonance phenomenon is related to the absorption and\n",
    "fluorescence processes, which adds an imaginary contribution to the atomic scattering factor.\n",
    "\n",
    "$$f(Q, E) = f_{0}(Q) + f'(E) + if''(E)$$\n",
    "\n",
    "The resonance amplitude $f'(E) + if''(E)$ values are also available on the [International Tables of Crystallography](https://onlinelibrary.wiley.com/doi/book/10.1107/97809553602060000001L) and are linear interpolated by **pyddt**."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e4eab177",
   "metadata": {},
   "source": [
    "## 0.4 Structure factor"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8b5b385f",
   "metadata": {},
   "source": [
    "In the **pyddt** current version (v0.0.0), the structure factor of the $hkl$ lattice plane is calculated by\n",
    "\n",
    "$$F_{hkl} = \\sum{a}(f_{0} + f' + if'')_{a}C_{a}e^{-M_{a}}e^{2\\pi i (hx_{a}+ly_{a}+lz_{a})}$$\n",
    "\n",
    "where $a$ summation over all atoms inside the unit cell, $C_{a}$ is the occupancy number, and $(x_{a}, y_{a}, z_{a})$ are the fractional coordinates. \n",
    "\n",
    "The **isotropic** Debye-Waller factor $$M_{a} = 8\\pi^{2}\\eta_{a}^{2}\\bigg(\\frac{\\text{sin}\\theta}{\\lambda}^{2}\\bigg) = B\\bigg(\\frac{\\text{sin}\\theta}{\\lambda}^{2}\\bigg) $$\n",
    "represents the crystal disorder, so that $\\eta_{a}$ is the root-mean-square deviation of the a-th atom in the direction of $\\mathbf{Q}$ and $B$ is the atomic B-factor. "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7a22a203",
   "metadata": {},
   "source": [
    "# 1. Calculating $f_{0}(Q)$"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "585b21aa",
   "metadata": {},
   "source": [
    "Let us calculate the atomic scattering factor for some cases."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "ce8fed0a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[4.79787017]])"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pyddt.asfQ('Se', 2)  # Q/4π = 2/Å"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "be5beed5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([33.9885    , 16.30767336,  7.86524559,  5.59115665,  4.35547504,\n",
       "        3.55113219,  3.12239028,  2.93518598,  2.86759017,  2.84728523])"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "q = np.linspace(0, 5, 10)  # Q/4π\n",
    "pyddt.asfQ('Se', q)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "8f5f1d24",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 504x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "q = np.linspace(0, 8, 1000)\n",
    "\n",
    "fig = plt.figure(figsize=(7, 5))\n",
    "\n",
    "plt.plot(q, pyddt.asfQ('Na1+', q), '-', label='Na1+')\n",
    "plt.plot(q, pyddt.asfQ('Na', q), label='Na')\n",
    "\n",
    "plt.xlabel(r'Q/4$\\pi$ (1/angstrom)')\n",
    "plt.ylabel('Atomic scattering factor f(Q)')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "59e764a0",
   "metadata": {},
   "source": [
    "# 2. Calculating $f'(E) + if''(E)$"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6c2a3536",
   "metadata": {},
   "source": [
    "Now, we will show how to obtain the atomic resonance amplitude (also called anomalous scattering factors)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "9d8eb888",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(-1.1306382948756366+3.1972344171411446j)"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pyddt.aresE('Fe', 8048)  # 8048 eV"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "ad61e367",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([-0.11975181+6.32684898j,  0.09827547+3.9969607j ,\n",
       "       -0.05817156+2.75911135j, -0.26933609+2.02224386j,\n",
       "       -0.49158992+1.54844579j, -0.70484541+1.22527238j,\n",
       "       -0.92480622+0.99511293j, -1.16733754+0.82516188j,\n",
       "       -1.4683844 +0.69590195j, -1.91835961+0.59518187j])"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pyddt.aresE('Cu', np.linspace(2000, 8000, 10)) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "4e25a09a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 504x360 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "e = np.linspace(6000, 8000, 1000)\n",
    "\n",
    "fig, (ax1, ax2) = plt.subplots(2, 1, figsize=(7, 5), sharex=True)\n",
    "\n",
    "ax1.plot(e/1000, np.real(pyddt.aresE('Fe', e)), 'r-', label=\"f'\")\n",
    "ax2.plot(e/1000, np.imag(pyddt.aresE('Fe', e)), 'b-', label=\"f''\")\n",
    "\n",
    "plt.xlabel(r'E (keV)')\n",
    "fig.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bfed4e39",
   "metadata": {},
   "source": [
    "# 3. Structure factor"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "82e54a4d",
   "metadata": {},
   "source": [
    "To exemplify the structure factor calculation, let us consider the sodium chloride crystal. You can download the below CIF on [Materials Project mp-22862](https://materialsproject.org/materials/mp-22862/)."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "27eec2e7",
   "metadata": {},
   "source": [
    "**`NaCl.cif`**\n",
    "\n",
    "\n",
    "<img align=left src=\"https://user-images.githubusercontent.com/106104347/187297124-d39c3bb1-c62a-41d7-a11e-a1b7c264b281.png\" width=\"350\">"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9cfd8477",
   "metadata": {},
   "source": [
    "## 3.1 Converting CIF into .in file "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7bc4b41e",
   "metadata": {},
   "source": [
    "The `Crystal`class requires an *.in* file, so we will convert the CIF into the expected format using the `pyddt.to_in()` function."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "bf53b6f7",
   "metadata": {},
   "outputs": [],
   "source": [
    "pyddt.to_in('NaCl.cif')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "491d836c",
   "metadata": {},
   "source": [
    "In the current folder, two new files are available: `NaCl.in` and `NaCl.struc`. The next step is generating the `crystal` object."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f653f819",
   "metadata": {},
   "source": [
    "## 3.2 Crystal object"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "5f8c1e96",
   "metadata": {},
   "outputs": [],
   "source": [
    "nacl = pyddt.Crystal('NaCl.in')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "58b6bf4f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 5.6917,  5.6917,  5.6917, 90.    , 90.    , 90.    ])"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nacl.structure.lattice"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "bdd83391",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Na', 'Na', 'Na', 'Na', 'Cl', 'Cl', 'Cl', 'Cl'], dtype='<U32')"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nacl.structure.atoms"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "0c2412d5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0. , 0. , 0. ],\n",
       "       [0. , 0.5, 0.5],\n",
       "       [0.5, 0. , 0.5],\n",
       "       [0.5, 0.5, 0. ],\n",
       "       [0.5, 0. , 0. ],\n",
       "       [0.5, 0.5, 0.5],\n",
       "       [0. , 0. , 0.5],\n",
       "       [0. , 0.5, 0. ]])"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nacl.structure.positions"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3805514e",
   "metadata": {},
   "source": [
    "With the crystal instantiated, we can check the direct lattice and structure. Also, the `bragg()` method displays and returns the interplanar distance and Bragg angle from beam energy and the Miller indices, while `Fhkl()` returns the complex structure factor."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "faa0139a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "E = 8048 eV - hkl = (100)\n",
      "\n",
      "d =  5.69 angstrom\n",
      "Bragg angle =  7.78 deg\n"
     ]
    }
   ],
   "source": [
    "d, th = nacl.bragg(8048, [1, 0, 0])\n",
    "print('E = 8048 eV - hkl = (100)\\n')\n",
    "print('d = ', np.round(d, 2), 'angstrom')\n",
    "print('Bragg angle = ', np.round(th, 2), 'deg')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "04e9d604",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " F =  (-18.6152-2.2587j) \n",
      "|F| =  18.7517 \n",
      "phase =  -173.0818 deg\n"
     ]
    }
   ],
   "source": [
    "F = nacl.Fhkl(8048, [1, 1, 1])\n",
    "\n",
    "print(\" F = \", np.round(F, 4),\n",
    "      \"\\n|F| = \", np.round(np.absolute(F), 4), \n",
    "      \"\\nphase = \", np.round(np.angle(F)*180/np.pi, 4), \"deg\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ff1d0c8d",
   "metadata": {},
   "source": [
    "It's possible to do this calculation for an array of energies or reflections by once."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "97e29fd3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 504x360 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "E = np.arange(3000, 12500, 500)  # eV\n",
    "\n",
    "fig, (ax1, ax2) = plt.subplots(2, 1, figsize=(7, 5), sharex=True)\n",
    "\n",
    "ax1.plot(E, np.angle(nacl.Fhkl(E, [1, 1, 1]))*180/np.pi)\n",
    "ax2.plot(E, np.absolute(nacl.Fhkl(E, [1, 1, 1]))*180/np.pi)\n",
    "\n",
    "plt.xlabel('Energy (eV)')\n",
    "\n",
    "ax1.set_ylabel('Phase (deg)')\n",
    "ax2.set_ylabel('Absolute value')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "1f03dbbf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "phase =  -168.935091990334219 90.000000000000003504 degrees\n"
     ]
    }
   ],
   "source": [
    "F = nacl.Fhkl(8048, [[1, 1, 3], [0, 0, 1]])\n",
    "print('phase = ', *np.angle(F)*180/np.pi, 'degrees')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ce44bfe4",
   "metadata": {},
   "source": [
    "## 3.3 Structure factor list "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b8852903",
   "metadata": {},
   "source": [
    "By the end, let us calculate the structure factor of all not null reflections. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "9127d45c",
   "metadata": {},
   "outputs": [],
   "source": [
    "hkl, f, d = nacl.diffraction(8048)  # Miller indices, structure factors and interplanar distance"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "a3db9a90",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 0.,  0., -2.],\n",
       "       [ 0., -2.,  0.],\n",
       "       [-2.,  0.,  0.],\n",
       "       ...,\n",
       "       [-5.,  0., -1.],\n",
       "       [ 1., -1.,  0.],\n",
       "       [ 0., -5., -3.]])"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hkl"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "061e8e5a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2.84585   , 2.84585   , 2.84585   , ..., 1.11623421, 4.02463967,\n",
       "       0.9761185 ])"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "d  # angstrom"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
